{"version":3,"sources":["logo.svg","Store/Reducers/reducerAuthentication.js","Store/configStore.js","helpers/ProtectedRoute.js","components/404.js","helpers/auth.js","components/Navigation.js","components/Welcome.js","components/Response.js","components/Login.js","components/Register.js","components/Home.js","components/Profil.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","isAuthenticated","userId","token","pseudo","email","name","lastname","AuthenticationReducer","state","action","type","value","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","connect","Component","component","rest","render","props","localStorage","getItem","to","pathname","from","location","PageNotFound","className","style","marginTop","this","authenticated","data","callback","Axios","post","then","catch","err","console","log","Navigation","logout","auth","removeItem","dispatch","navbarLinks","liStyle","margin","href","id","role","data-toggle","aria-expanded","onClick","backgroundColor","height","width","src","logo","alt","data-target","aria-controls","aria-label","React","Welcome","paddingTop","Response","message","Login","handleInputsChange","e","setState","target","handleSubmit","preventDefault","response","login","error","password","setItem","history","push","onSubmit","htmlFor","onChange","Register","api","setTimeout","register","cpassword","create","baseURL","Home","Profil","patch","get","disabled","placeholder","App","path","exact","Boolean","hostname","match","defaults","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d2b37de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const initialState = {\r\n    isAuthenticated : false,\r\n    userId : \"\",\r\n    token : \"\",\r\n    pseudo : \"\",\r\n    email : \"\",\r\n    name : \"\", \r\n    lastname : \"\",\r\n}\r\n\r\nfunction AuthenticationReducer(state = initialState, action){\r\n    let nextState; \r\n    switch (action.type) {\r\n        case 'CONNECTED_USER':\r\n            nextState = {\r\n                isAuthenticated : true,\r\n                userId : action.value.userId,\r\n                token : action.value.token,\r\n                pseudo : action.value.pseudo,\r\n                email : action.value.email,\r\n                name : action.value.name,\r\n                lastname : action.value.lastname,\r\n            }; \r\n            return nextState || state ; \r\n\r\n        case 'DECONNECTED_USER':\r\n            if(state.isAuthenticated){ \r\n                nextState = initialState;\r\n                return nextState || state; \r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AuthenticationReducer;","import {createStore} from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport AuthenticationReducer from './Reducers/reducerAuthentication'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage, \r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, AuthenticationReducer)\r\n\r\nlet store = createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),)\r\nlet persistor = persistStore(store) \r\n\r\nexport {store, persistor}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Route, Redirect} from \"react-router-dom\" \r\n\r\nconst ProtectedRoute = ({component : Component, ...rest}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            \r\n            render = {props => { \r\n                if(localStorage.getItem('token')){\r\n                    return <Component {...props} />\r\n                }\r\n                else{\r\n                    return <Redirect to ={{\r\n                            pathname : '/login',\r\n                            state : {\r\n                               from : props.location\r\n                            }\r\n                        }}/>\r\n                }\r\n            }}\r\n        />  \r\n    )\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => { \r\n    return state\r\n}\r\n\r\nexport default  connect(mapGlobalStateToProps)(ProtectedRoute);","import React from 'react'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <div className=\"text-center text-danger font-weight-bold\" style={{marginTop:\"150px\"}}>\r\n            Page non trouvée !\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import Axios from 'axios'\r\n\r\n\r\nclass Authentication {\r\n    constructor(){\r\n        this.authenticated = false \r\n    }\r\n\r\n    login(data, callback){ \r\n        Axios.post(\"users/login\", { data })\r\n        .then(({data}) => {\r\n            this.authenticated = true\r\n            callback(data)\r\n        })\r\n        .catch(err => {\r\n            callback(err)\r\n            console.log(\"Erreur interne du serveur\", err)\r\n        })\r\n    }\r\n\r\n    logout(callback){\r\n        this.authenticated = false\r\n        callback()\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated\r\n    }\r\n}\r\n\r\nexport default new Authentication() ;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'; \r\nimport auth from \"../helpers/auth\"\r\nimport logo from \"../logo.svg\" \r\n\r\nclass Navigation extends React.Component {\r\n\r\n    logout = () => { \r\n        const props = this.props \r\n        auth.logout(() =>{ \r\n            const action = {\r\n                type : \"DECONNECTED_USER\",  \r\n            }\r\n            localStorage.removeItem(\"token\") \r\n            props.dispatch(action)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const liStyle = {\r\n            margin : 7,\r\n            // color : \"black\"\r\n        }   \r\n\r\n        let navbarLinks \r\n\r\n        if(localStorage.getItem('token')){\r\n            navbarLinks = (\r\n                <ul className=\"navbar-nav ml-auto\" style={liStyle}> \r\n                    <li className=\"nav-item dropdown\" >\r\n                        <a href=\"profil\" className=\"nav-link dropdown-toggle\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            {this.props.pseudo ? this.props.pseudo : 'Profil'}\r\n                        </a>\r\n                        <ul className=\"dropdown-menu dropdown-menu-dark\"> \r\n                            <NavLink to='/home'>\r\n                                <li style={liStyle}>\r\n                                    Home\r\n                                </li>\r\n                            </NavLink>\r\n                            <NavLink to='/users/me'>\r\n                                <li style={liStyle}>\r\n                                    Profil\r\n                                </li>\r\n                            </NavLink>\r\n                            <NavLink to=\"/login\">\r\n                                <li className=\"nav-item\" style={liStyle} onClick={this.logout}>\r\n                                    Se Déconnecter \r\n                                </li>\r\n                            </NavLink> \r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }else{\r\n            navbarLinks = (\r\n                <ul className=\"navbar-nav ml-auto\"> \r\n                    <NavLink to=\"/login\" style={liStyle}>\r\n                        <li style={liStyle}>\r\n                            Se Connecter\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/register\" style={liStyle}>\r\n                        <li style={liStyle}>\r\n                            S'enregistrer\r\n                        </li>\r\n                    </NavLink> \r\n                </ul>\r\n            )\r\n        }\r\n\r\n\r\n        return(\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light\" style={{backgroundColor: \"#e3f2fd\"}}>\r\n                    <NavLink to=\"/\">\r\n                        <img style={{height : \"30px\", width : \"40px\"}} src={logo} alt='logo'></img>\r\n                        LeCorro \r\n                    </NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n    \r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        {navbarLinks}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => { \r\n    return {\r\n        isAuthenticated : state.isAuthenticated, \r\n        pseudo : state.pseudo\r\n    }\r\n}\r\nexport default connect(mapGlobalStateToProps)(Navigation);\r\n","import React from 'react'\r\nimport Navigation from  './Navigation'\r\n\r\nclass Welcome extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Navigation></Navigation>\r\n\r\n                <div className='container' style={{ paddingTop :' 80px' }}>\r\n                    Welcome Page\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome","import React from 'react'; \r\n\r\nclass Response extends React.Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"alert alert-warning text-center\">\r\n                {this.props.message}\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Response;","import React from 'react' \r\nimport {connect} from 'react-redux'\r\nimport Navigation from './Navigation'\r\nimport Response from \"./Response\"\r\nimport auth from \"../helpers/auth\"\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            email : 'louloulexus@gmail.com',\r\n            password : '1234',\r\n            response : null,\r\n        } \r\n    }\r\n\r\n    handleInputsChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    } \r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.setState({response : null}) \r\n        let props = this.props\r\n\r\n        auth.login(this.state, (data) => { \r\n            if(data.error){ //Mot de passe incorrect\r\n                this.setState({response : data.error, password:\"\"}) \r\n            }else if(data.userId && data.token && data.email && data.pseudo && data.name && data.lastname){ // identifiants corrects \r\n                const action = {\r\n                    type : \"CONNECTED_USER\", \r\n                    value : {...data}\r\n                }\r\n                props.dispatch(action)\r\n                localStorage.setItem('token', data.token)\r\n                props.history.push(\"/home\")\r\n            }else{ // Erreur interne du serveur \r\n                this.setState({response : \"Erreur de connexion, veuillez réessayer ultérieurement !\"})   \r\n            }\r\n        })\r\n        \r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navigation />\r\n\r\n                <div className='container col-6' style={{ paddingTop :' 80px' }}>\r\n                    {this.state.response ? <Response message={this.state.response} /> : this.state.response}\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-3 col-form-label text-left\">Adresse email : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"email\" type=\"text\" className=\"form-control\" id=\"email\" \r\n                                value={this.state.email}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-3 col-form-label text-left\">Mot de passe : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" \r\n                                value={this.state.password}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-success btn-block \">Connexion</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated : state.isAuthenticated, \r\n    }\r\n}\r\nexport default connect(mapGlobalStateToProps)(Login);","import Axios from 'axios';\r\nimport React from 'react'; \r\nimport Navigation from './Navigation'\r\nimport Response from './Response'\r\n\r\nclass Register extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.initialState = {\r\n            register : \"\",\r\n            email : \"\",\r\n            name : \"\",\r\n            lastname : \"\",\r\n            pseudo : \"\",\r\n            password : \"\",\r\n            cpassword : \"\",\r\n        }\r\n        this.state = {response : null, ...this.initialState}\r\n        this.api = Axios.create({\r\n            baseURL : \"http://localhost:8080/\"\r\n        })\r\n    }\r\n\r\n    handleInputsChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const data  = this.state\r\n\r\n        this.api.post('api/users/register', { data })\r\n        .then(({data}) => { \r\n            if(data.error){\r\n                this.setState({response : data.error}) \r\n            }else if(data.userId){\r\n                this.setState({response : \"Vous êtes bien enregistrés !\"}) \r\n                this.setState(this.initialState) \r\n                setTimeout(() => {\r\n                    this.props.history.push(\"/home\")\r\n                }, 2000);\r\n            }\r\n        })\r\n        .catch(err => {\r\n            this.setState({response : \"Une erreur s'est produite, veuillez réessayer plutard !\"}) \r\n            console.log(\"Une erreur s'est produite lors de l'enregistrement front-end\", err)\r\n        })\r\n    }\r\n\r\n    render(){ \r\n\r\n        return(\r\n            <div>\r\n\r\n                <Navigation />\r\n\r\n                <div className='container col-6' style={{ paddingTop :' 80px' }}>\r\n\r\n                    {this.state.response != null ? <Response message={this.state.response}/> : null}\r\n\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"register\" className=\"col-sm-3 col-form-label text-left\">Matricule étudiant : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"register\" type=\"text\" className=\"form-control\" id=\"register\" \r\n                                value={this.state.register}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-3 col-form-label text-left\">Adresse email : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"email\" type=\"email\" className=\"form-control\" id=\"email\" \r\n                                value={this.state.email}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"name\" className=\"col-sm-3 col-form-label text-left\">Nom  : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" \r\n                                value={this.state.name}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"lastname\" className=\"col-sm-3 col-form-label text-left\">Prénom : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"lastname\" type=\"text\" className=\"form-control\" id=\"lastname\" \r\n                                value={this.state.lastname}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"pseudo\" className=\"col-sm-3 col-form-label text-left\">Pseudo: </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"pseudo\" type=\"text\" className=\"form-control\" id=\"pseudo\" \r\n                                value={this.state.pseudo}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"password\" className=\"col-sm-3 col-form-label text-left\">Mot de passe : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"password\" \r\n                                value={this.state.password}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-3 row\">\r\n                            <label htmlFor=\"cpassword\" className=\"col-sm-3 col-form-label text-left\">Confirmer mot de passe : </label>\r\n                            <div className=\"col-sm-9\">\r\n                            <input name=\"cpassword\" type=\"password\" className=\"form-control\" id=\"cpassword\" \r\n                                value={this.state.cpassword}\r\n                                onChange={this.handleInputsChange}/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <button className=\"btn btn-success btn-block \">Creer un compte</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Register;","import React from 'react' \r\nimport {connect} from 'react-redux'\r\nimport Navigation from './Navigation'\r\n\r\nclass Home extends React.Component{ \r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navigation />\r\n\r\n                <div className='container col-6' style={{ paddingTop :' 80px' }} >\r\n\r\n                    <div className=\"alert alert-success display-2\">\r\n                        Bienvenue sur votre compte, \r\n                        <span className=\"text-capitalize\">{this.props.pseudo}</span>  !\r\n                    </div>  \r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return state\r\n    // return {\r\n    //     isAuthenticated : state.isAuthenticated,\r\n    //     userID : state.userID,\r\n    //     token : state.token,\r\n    //     pseudo : state.pseudo,\r\n    //     email : state.email,\r\n    //     name : state.name,\r\n    //     lastname : state.lastname,\r\n    // }\r\n}\r\n\r\nexport default connect(mapGlobalStateToProps)(Home);","import React from 'react' \r\nimport {connect} from 'react-redux'\r\nimport Axios from 'axios'\r\nimport Navigation from './Navigation' \r\n\r\n\r\nclass Profil extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            register : '',\r\n            email : '',\r\n            name : '',\r\n            lastname : '',\r\n            pseudo : '',\r\n        } \r\n    }\r\n\r\n    componentDidMount(){ \r\n        Axios.get(\"users/me/\"+this.props.token)\r\n        .then(({data}) => {\r\n            this.setState({\r\n                register : data.register,\r\n                email : data.email,\r\n                name : data.name,\r\n                lastname : data.lastname,\r\n                pseudo : data.pseudo,\r\n            }) \r\n        })\r\n        .catch(error => console.log(\"Erreur axios : \",error))\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()  \r\n        console.log(this.state);\r\n        let props = this.props\r\n\r\n        Axios.patch(\"users/me/\" + this.props.token, this.state)\r\n        .then(response => {\r\n            props.history.push('/home')\r\n        })\r\n        .catch(error => {\r\n            console.log(\"Erreur lors de l'update du user\");\r\n        })\r\n        \r\n    }\r\n    \r\n    handleInputsChange = (e) => {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    } \r\n\r\n    render(){ \r\n        return(\r\n            <div>\r\n                <Navigation/>\r\n                \r\n                <div className='container' style={{ paddingTop :' 80px' }}>\r\n                    <form onSubmit={this.handleSubmit} className='col-sm-7'>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"register\" className=\"col-sm-2 col-form-label col-form-label-sm\">Matricule : </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <input type=\"text\" className=\"form-control form-control-sm\" id=\"register\" disabled\r\n                                    value={this.state.register}\r\n                                    onChange={this.handleInputsChange} placeholder=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"email\" className=\"col-sm-2 col-form-label col-form-label-sm\">Adresse email : </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <input name=\"email\" type=\"email\" className=\"form-control form-control-sm\" id=\"email\" \r\n                                    value={this.state.email}\r\n                                    onChange={this.handleInputsChange} placeholder=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"name\" className=\"col-sm-2 col-form-label col-form-label-sm\">Nom : </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <input name=\"name\" type=\"text\" className=\"form-control form-control-sm\" id=\"name\" \r\n                                    value={this.state.name}\r\n                                    onChange={this.handleInputsChange} placeholder=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"lastname\" className=\"col-sm-2 col-form-label col-form-label-sm\">Prénom : </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <input name=\"lastname\" type=\"text\" className=\"form-control form-control-sm\" id=\"lastname\" \r\n                                    value={this.state.lastname}\r\n                                    onChange={this.handleInputsChange} placeholder=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-3\">\r\n                            <label htmlFor=\"pseudo\" className=\"col-sm-2 col-form-label col-form-label-sm\">Pseudo : </label>\r\n                            <div className=\"col-sm-10\">\r\n                                <input name=\"pseudo\" type=\"text\" className=\"form-control form-control-sm\" id=\"pseudo\" \r\n                                    value={this.state.pseudo}\r\n                                    onChange={this.handleInputsChange} placeholder=\"\"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-success btn-sm btn-block\" type=\"submit\">Mettre à jour</button>\r\n\r\n                    </form>\r\n                        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return state\r\n}\r\nexport default connect(mapGlobalStateToProps)(Profil);","import React from 'react';  \nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \nimport ProtectedRoute from './helpers/ProtectedRoute'\nimport PageNotFound from './components/404'\n// import Navigation from './components/Navigation';\nimport Welcome from './components/Welcome'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Home from './components/Home'\nimport Profil from './components/Profil'\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <Navigation /> */}\n        <Switch>\n          <Route path=\"/\" exact component={Welcome}></Route>\n          <Route path=\"/login\" exact component={Login}></Route>\n          <Route path=\"/register\" exact component={Register} />\n          <ProtectedRoute path=\"/home\" exact component={Home}></ProtectedRoute>\n          <ProtectedRoute path=\"/users/me\" exact component={Profil}></ProtectedRoute> \n          <Route path=\"*\" component={PageNotFound}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store , persistor} from \"./Store/configStore\"\nimport Axios from 'axios'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// const {store , persistor} = configureStore()\n\n\nconsole.log(store);\n\nAxios.defaults.baseURL = \"http://localhost:8080/api/\"\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}